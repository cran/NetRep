// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "NetRep_types.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// CheckFinite
void CheckFinite(Rcpp::NumericMatrix matPtr);
RcppExport SEXP _NetRep_CheckFinite(SEXP matPtrSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type matPtr(matPtrSEXP);
    CheckFinite(matPtr);
    return R_NilValue;
END_RCPP
}
// IntermediateProperties
Rcpp::List IntermediateProperties(Rcpp::NumericMatrix dData, Rcpp::NumericMatrix dCorr, Rcpp::NumericMatrix dNet, Rcpp::CharacterVector tNodeNames, Rcpp::CharacterVector moduleAssignments, Rcpp::CharacterVector modules);
RcppExport SEXP _NetRep_IntermediateProperties(SEXP dDataSEXP, SEXP dCorrSEXP, SEXP dNetSEXP, SEXP tNodeNamesSEXP, SEXP moduleAssignmentsSEXP, SEXP modulesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dData(dDataSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dCorr(dCorrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dNet(dNetSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type tNodeNames(tNodeNamesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type moduleAssignments(moduleAssignmentsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type modules(modulesSEXP);
    rcpp_result_gen = Rcpp::wrap(IntermediateProperties(dData, dCorr, dNet, tNodeNames, moduleAssignments, modules));
    return rcpp_result_gen;
END_RCPP
}
// IntermediatePropertiesNoData
Rcpp::List IntermediatePropertiesNoData(Rcpp::NumericMatrix dCorr, Rcpp::NumericMatrix dNet, Rcpp::CharacterVector tNodeNames, Rcpp::CharacterVector moduleAssignments, Rcpp::CharacterVector modules);
RcppExport SEXP _NetRep_IntermediatePropertiesNoData(SEXP dCorrSEXP, SEXP dNetSEXP, SEXP tNodeNamesSEXP, SEXP moduleAssignmentsSEXP, SEXP modulesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dCorr(dCorrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dNet(dNetSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type tNodeNames(tNodeNamesSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type moduleAssignments(moduleAssignmentsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type modules(modulesSEXP);
    rcpp_result_gen = Rcpp::wrap(IntermediatePropertiesNoData(dCorr, dNet, tNodeNames, moduleAssignments, modules));
    return rcpp_result_gen;
END_RCPP
}
// PermutationProcedure
Rcpp::List PermutationProcedure(Rcpp::List discProps, Rcpp::NumericMatrix tData, Rcpp::NumericMatrix tCorr, Rcpp::NumericMatrix tNet, Rcpp::CharacterVector moduleAssignments, Rcpp::CharacterVector modules, Rcpp::IntegerVector nPermutations, Rcpp::IntegerVector nCores, Rcpp::CharacterVector nullHypothesis, Rcpp::LogicalVector verbose, Rcpp::Function vCat);
RcppExport SEXP _NetRep_PermutationProcedure(SEXP discPropsSEXP, SEXP tDataSEXP, SEXP tCorrSEXP, SEXP tNetSEXP, SEXP moduleAssignmentsSEXP, SEXP modulesSEXP, SEXP nPermutationsSEXP, SEXP nCoresSEXP, SEXP nullHypothesisSEXP, SEXP verboseSEXP, SEXP vCatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type discProps(discPropsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type tData(tDataSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type tCorr(tCorrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type tNet(tNetSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type moduleAssignments(moduleAssignmentsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type modules(modulesSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type nPermutations(nPermutationsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type nCores(nCoresSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type nullHypothesis(nullHypothesisSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type vCat(vCatSEXP);
    rcpp_result_gen = Rcpp::wrap(PermutationProcedure(discProps, tData, tCorr, tNet, moduleAssignments, modules, nPermutations, nCores, nullHypothesis, verbose, vCat));
    return rcpp_result_gen;
END_RCPP
}
// PermutationProcedureNoData
Rcpp::List PermutationProcedureNoData(Rcpp::List discProps, Rcpp::NumericMatrix tCorr, Rcpp::NumericMatrix tNet, Rcpp::CharacterVector moduleAssignments, Rcpp::CharacterVector modules, Rcpp::IntegerVector nPermutations, Rcpp::IntegerVector nCores, Rcpp::CharacterVector nullHypothesis, Rcpp::LogicalVector verbose, Rcpp::Function vCat);
RcppExport SEXP _NetRep_PermutationProcedureNoData(SEXP discPropsSEXP, SEXP tCorrSEXP, SEXP tNetSEXP, SEXP moduleAssignmentsSEXP, SEXP modulesSEXP, SEXP nPermutationsSEXP, SEXP nCoresSEXP, SEXP nullHypothesisSEXP, SEXP verboseSEXP, SEXP vCatSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type discProps(discPropsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type tCorr(tCorrSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type tNet(tNetSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type moduleAssignments(moduleAssignmentsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type modules(modulesSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type nPermutations(nPermutationsSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type nCores(nCoresSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type nullHypothesis(nullHypothesisSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type vCat(vCatSEXP);
    rcpp_result_gen = Rcpp::wrap(PermutationProcedureNoData(discProps, tCorr, tNet, moduleAssignments, modules, nPermutations, nCores, nullHypothesis, verbose, vCat));
    return rcpp_result_gen;
END_RCPP
}
// NetProps
Rcpp::List NetProps(Rcpp::NumericMatrix data, Rcpp::NumericMatrix net, Rcpp::CharacterVector moduleAssignments, Rcpp::CharacterVector modules);
RcppExport SEXP _NetRep_NetProps(SEXP dataSEXP, SEXP netSEXP, SEXP moduleAssignmentsSEXP, SEXP modulesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type net(netSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type moduleAssignments(moduleAssignmentsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type modules(modulesSEXP);
    rcpp_result_gen = Rcpp::wrap(NetProps(data, net, moduleAssignments, modules));
    return rcpp_result_gen;
END_RCPP
}
// NetPropsNoData
Rcpp::List NetPropsNoData(Rcpp::NumericMatrix net, Rcpp::CharacterVector moduleAssignments, Rcpp::CharacterVector modules);
RcppExport SEXP _NetRep_NetPropsNoData(SEXP netSEXP, SEXP moduleAssignmentsSEXP, SEXP modulesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type net(netSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type moduleAssignments(moduleAssignmentsSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type modules(modulesSEXP);
    rcpp_result_gen = Rcpp::wrap(NetPropsNoData(net, moduleAssignments, modules));
    return rcpp_result_gen;
END_RCPP
}
// Scale
Rcpp::NumericMatrix Scale(Rcpp::NumericMatrix data);
RcppExport SEXP _NetRep_Scale(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(Scale(data));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_NetRep_CheckFinite", (DL_FUNC) &_NetRep_CheckFinite, 1},
    {"_NetRep_IntermediateProperties", (DL_FUNC) &_NetRep_IntermediateProperties, 6},
    {"_NetRep_IntermediatePropertiesNoData", (DL_FUNC) &_NetRep_IntermediatePropertiesNoData, 5},
    {"_NetRep_PermutationProcedure", (DL_FUNC) &_NetRep_PermutationProcedure, 11},
    {"_NetRep_PermutationProcedureNoData", (DL_FUNC) &_NetRep_PermutationProcedureNoData, 10},
    {"_NetRep_NetProps", (DL_FUNC) &_NetRep_NetProps, 4},
    {"_NetRep_NetPropsNoData", (DL_FUNC) &_NetRep_NetPropsNoData, 3},
    {"_NetRep_Scale", (DL_FUNC) &_NetRep_Scale, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_NetRep(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
